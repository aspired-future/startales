# UI Frontend Container - React/Vite
FROM node:20-alpine

# Install system dependencies
RUN apk add --no-cache \
    curl \
    git \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./
COPY vite.config.ts ./

# Create Docker-specific tsconfig.json without package references
RUN echo '{\
  "compilerOptions": {\
    "target": "ES2020",\
    "lib": ["ES2020", "DOM", "DOM.Iterable"],\
    "module": "ESNext",\
    "skipLibCheck": true,\
    "moduleResolution": "bundler",\
    "allowImportingTsExtensions": true,\
    "resolveJsonModule": true,\
    "isolatedModules": true,\
    "noEmit": true,\
    "jsx": "react-jsx",\
    "strict": true,\
    "noUnusedLocals": false,\
    "noUnusedParameters": false,\
    "noFallthroughCasesInSwitch": true\
  },\
  "include": ["src/**/*"],\
  "exclude": ["node_modules", "dist"]\
}' > tsconfig.json

# Install dependencies
RUN npm ci --only=production=false

# Copy source code
COPY src/ ./src/
COPY public/ ./public/

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S uiuser -u 1001 -G nodejs

# Change ownership
RUN chown -R uiuser:nodejs /app
USER uiuser

# Expose UI port
EXPOSE 5173

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5173 || exit 1

# Development command with hot reload
CMD ["npm", "run", "ui"]
